name: CI

on:
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite

    steps:
    - uses: actions/checkout@v2
    - name: Validate composer.json and composer.lock
      run: composer validate
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install Dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Migrate Database
      run: php artisan migrate
    - name: Seed Database
      run: php artisan db:seed
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit --coverage-clover=coverage.xml
    - name: CodeCoverage
      uses: codecov/codecov-action@v1
