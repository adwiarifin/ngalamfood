name: CD

on:
  push:
    branches: [ master ]

jobs:
  deploy:

    runs-on: ubuntu-latest
    env:
      APP_URL: ${{ secrets.APP_URL }}

    steps:
    - uses: actions/checkout@v2
    - name: Cache Node modules
      id: node-cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install Node modules
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm install
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Build Assets
      run: npm run production
    - name: Copy Assets
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: "public/css/*,public/js/*,public/mix-manifest.json"
        target: "${{ secrets.PATH }}"
    - name: SSH Remote Commands
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ${{ secrets.PATH }}
          php artisan down
          git pull
          composer install --no-ansi --no-dev --no-interaction --no-plugins --no-progress --no-scripts --no-suggest --optimize-autoloader
          php artisan optimize
          php artisan up
